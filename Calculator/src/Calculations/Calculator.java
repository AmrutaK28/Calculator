/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Calculations;

import java.awt.Color;
import Docalci.Func;

/**
 *
 * @author Amruta
 */
public class Calculator extends javax.swing.JFrame {
double f,sec,res;
String op;

    /**
     * Creates new form Calculator
     */
    public Calculator() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jSplitPane1 = new javax.swing.JSplitPane();
        clr = new javax.swing.JButton();
        back = new javax.swing.JButton();
        per = new javax.swing.JButton();
        div = new javax.swing.JButton();
        seven = new javax.swing.JButton();
        eight = new javax.swing.JButton();
        nine = new javax.swing.JButton();
        mult = new javax.swing.JButton();
        four = new javax.swing.JButton();
        five = new javax.swing.JButton();
        six = new javax.swing.JButton();
        minus = new javax.swing.JButton();
        one = new javax.swing.JButton();
        two = new javax.swing.JButton();
        three = new javax.swing.JButton();
        plus = new javax.swing.JButton();
        sign = new javax.swing.JButton();
        zero = new javax.swing.JButton();
        dot = new javax.swing.JButton();
        equl = new javax.swing.JButton();
        ans = new javax.swing.JTextField();
        que = new javax.swing.JTextField();
        rais3 = new javax.swing.JButton();
        raisab = new javax.swing.JButton();
        modls = new javax.swing.JButton();
        binry = new javax.swing.JButton();
        hexd = new javax.swing.JButton();
        deci = new javax.swing.JButton();
        sine = new javax.swing.JButton();
        Cosine = new javax.swing.JButton();
        Tane = new javax.swing.JButton();
        logs = new javax.swing.JButton();
        powers = new javax.swing.JButton();
        rais2 = new javax.swing.JButton();
        octal = new javax.swing.JButton();
        squr2 = new javax.swing.JButton();
        squr3 = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        def = new javax.swing.JMenuItem();
        scientific = new javax.swing.JMenuItem();
        hst = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(204, 204, 255));
        setSize(new java.awt.Dimension(450, 650));
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowActivated(java.awt.event.WindowEvent evt) {
                formWindowActivated(evt);
            }
        });
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        clr.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        clr.setText("C");
        clr.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clrActionPerformed(evt);
            }
        });
        getContentPane().add(clr, new org.netbeans.lib.awtextra.AbsoluteConstraints(28, 129, 80, 60));

        back.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        back.setText(" \t←");
        back.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backActionPerformed(evt);
            }
        });
        getContentPane().add(back, new org.netbeans.lib.awtextra.AbsoluteConstraints(126, 128, 80, 60));

        per.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        per.setText("%");
        per.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                perActionPerformed(evt);
            }
        });
        getContentPane().add(per, new org.netbeans.lib.awtextra.AbsoluteConstraints(224, 129, 80, 60));

        div.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        div.setText("÷");
        div.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                divActionPerformed(evt);
            }
        });
        getContentPane().add(div, new org.netbeans.lib.awtextra.AbsoluteConstraints(322, 129, 80, 60));

        seven.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        seven.setText("7");
        seven.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sevenActionPerformed(evt);
            }
        });
        getContentPane().add(seven, new org.netbeans.lib.awtextra.AbsoluteConstraints(28, 216, 80, 60));

        eight.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        eight.setText("8");
        eight.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                eightActionPerformed(evt);
            }
        });
        getContentPane().add(eight, new org.netbeans.lib.awtextra.AbsoluteConstraints(126, 216, 80, 60));

        nine.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        nine.setText("9");
        nine.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nineActionPerformed(evt);
            }
        });
        getContentPane().add(nine, new org.netbeans.lib.awtextra.AbsoluteConstraints(224, 216, 80, 60));

        mult.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        mult.setText("X");
        mult.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                multActionPerformed(evt);
            }
        });
        getContentPane().add(mult, new org.netbeans.lib.awtextra.AbsoluteConstraints(322, 216, 80, 60));

        four.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        four.setText("4");
        four.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fourActionPerformed(evt);
            }
        });
        getContentPane().add(four, new org.netbeans.lib.awtextra.AbsoluteConstraints(28, 306, 80, 60));

        five.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        five.setText("5");
        five.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fiveActionPerformed(evt);
            }
        });
        getContentPane().add(five, new org.netbeans.lib.awtextra.AbsoluteConstraints(126, 306, 80, 60));

        six.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        six.setText("6");
        six.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sixActionPerformed(evt);
            }
        });
        getContentPane().add(six, new org.netbeans.lib.awtextra.AbsoluteConstraints(224, 306, 80, 60));

        minus.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        minus.setText("-");
        minus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                minusActionPerformed(evt);
            }
        });
        getContentPane().add(minus, new org.netbeans.lib.awtextra.AbsoluteConstraints(322, 304, 80, 60));

        one.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        one.setText("1");
        one.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                oneActionPerformed(evt);
            }
        });
        getContentPane().add(one, new org.netbeans.lib.awtextra.AbsoluteConstraints(28, 393, 80, 60));

        two.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        two.setText("2");
        two.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                twoActionPerformed(evt);
            }
        });
        getContentPane().add(two, new org.netbeans.lib.awtextra.AbsoluteConstraints(126, 393, 80, 60));

        three.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        three.setText("3");
        three.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                threeActionPerformed(evt);
            }
        });
        getContentPane().add(three, new org.netbeans.lib.awtextra.AbsoluteConstraints(224, 393, 80, 60));

        plus.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        plus.setText("+");
        plus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                plusActionPerformed(evt);
            }
        });
        getContentPane().add(plus, new org.netbeans.lib.awtextra.AbsoluteConstraints(322, 393, 80, 60));

        sign.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        sign.setText("±");
        sign.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                signActionPerformed(evt);
            }
        });
        getContentPane().add(sign, new org.netbeans.lib.awtextra.AbsoluteConstraints(28, 486, 80, 60));

        zero.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        zero.setText("0");
        zero.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                zeroActionPerformed(evt);
            }
        });
        getContentPane().add(zero, new org.netbeans.lib.awtextra.AbsoluteConstraints(126, 486, 80, 60));

        dot.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        dot.setText(".");
        dot.setMaximumSize(new java.awt.Dimension(41, 25));
        dot.setMinimumSize(new java.awt.Dimension(41, 25));
        dot.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dotActionPerformed(evt);
            }
        });
        getContentPane().add(dot, new org.netbeans.lib.awtextra.AbsoluteConstraints(224, 484, 80, 60));

        equl.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        equl.setText("=");
        equl.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                equlActionPerformed(evt);
            }
        });
        getContentPane().add(equl, new org.netbeans.lib.awtextra.AbsoluteConstraints(322, 486, 80, 60));

        ans.setEditable(false);
        ans.setBackground(new java.awt.Color(255, 255, 255));
        ans.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        ans.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        ans.setBorder(null);
        getContentPane().add(ans, new org.netbeans.lib.awtextra.AbsoluteConstraints(28, 55, 374, 47));

        que.setEditable(false);
        que.setBackground(new java.awt.Color(255, 255, 255));
        que.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        que.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        que.setText("0");
        que.setBorder(null);
        que.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                queActionPerformed(evt);
            }
        });
        getContentPane().add(que, new org.netbeans.lib.awtextra.AbsoluteConstraints(28, 11, 374, 44));

        rais3.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        rais3.setText("^3");
        rais3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rais3ActionPerformed(evt);
            }
        });
        getContentPane().add(rais3, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 310, 80, 60));

        raisab.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        raisab.setText("10^");
        raisab.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                raisabActionPerformed(evt);
            }
        });
        getContentPane().add(raisab, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 310, 80, 60));

        modls.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        modls.setText("Mod");
        modls.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                modlsActionPerformed(evt);
            }
        });
        getContentPane().add(modls, new org.netbeans.lib.awtextra.AbsoluteConstraints(630, 310, 80, 60));

        binry.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        binry.setText("Bin");
        binry.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                binryActionPerformed(evt);
            }
        });
        getContentPane().add(binry, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 400, 80, 60));

        hexd.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        hexd.setText("Hex");
        hexd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hexdActionPerformed(evt);
            }
        });
        getContentPane().add(hexd, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 400, 80, 60));

        deci.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        deci.setText("Dec");
        deci.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deciActionPerformed(evt);
            }
        });
        getContentPane().add(deci, new org.netbeans.lib.awtextra.AbsoluteConstraints(630, 400, 80, 60));

        sine.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        sine.setText("sin");
        sine.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sineActionPerformed(evt);
            }
        });
        getContentPane().add(sine, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 130, 80, 60));

        Cosine.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        Cosine.setText("Cos");
        Cosine.setToolTipText("");
        Cosine.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CosineActionPerformed(evt);
            }
        });
        getContentPane().add(Cosine, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 130, 80, 60));

        Tane.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        Tane.setText("Tan");
        Tane.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TaneActionPerformed(evt);
            }
        });
        getContentPane().add(Tane, new org.netbeans.lib.awtextra.AbsoluteConstraints(630, 130, 80, 60));

        logs.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        logs.setText("Log");
        logs.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                logsActionPerformed(evt);
            }
        });
        getContentPane().add(logs, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 220, 80, 60));

        powers.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        powers.setText("^");
        powers.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                powersActionPerformed(evt);
            }
        });
        getContentPane().add(powers, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 220, 80, 60));

        rais2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        rais2.setText("^2");
        rais2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rais2ActionPerformed(evt);
            }
        });
        getContentPane().add(rais2, new org.netbeans.lib.awtextra.AbsoluteConstraints(630, 220, 80, 60));

        octal.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        octal.setText("Oct");
        octal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                octalActionPerformed(evt);
            }
        });
        getContentPane().add(octal, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 490, 80, 60));

        squr2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        squr2.setText(" √ ");
        squr2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                squr2ActionPerformed(evt);
            }
        });
        getContentPane().add(squr2, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 490, 80, 60));

        squr3.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        squr3.setText("3√");
        squr3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                squr3ActionPerformed(evt);
            }
        });
        getContentPane().add(squr3, new org.netbeans.lib.awtextra.AbsoluteConstraints(630, 490, 80, 60));

        jMenuBar1.setAlignmentX(0.1F);
        jMenuBar1.setAlignmentY(0.48F);
        jMenuBar1.setFont(new java.awt.Font("Segoe UI Black", 0, 24)); // NOI18N
        jMenuBar1.setPreferredSize(new java.awt.Dimension(74, 21));

        jMenu1.setText("Options");

        def.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_D, java.awt.event.InputEvent.CTRL_MASK));
        def.setText("Standard");
        def.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                defActionPerformed(evt);
            }
        });
        jMenu1.add(def);

        scientific.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.ALT_MASK));
        scientific.setText("Scientific");
        scientific.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                scientificActionPerformed(evt);
            }
        });
        jMenu1.add(scientific);

        hst.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_H, java.awt.event.InputEvent.SHIFT_MASK));
        hst.setText("History");
        hst.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hstActionPerformed(evt);
            }
        });
        jMenu1.add(hst);

        jMenuBar1.add(jMenu1);

        setJMenuBar(jMenuBar1);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void divActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_divActionPerformed
        ans.setForeground(Color.white);
        f = Double.parseDouble(ans.getText());
        ans.removeAll();
      ans.setText("");
     op="/";
     String n=que.getText()+div.getText();
     que.setText(n);
        // TODO add your handling code here:
    }//GEN-LAST:event_divActionPerformed

    private void oneActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_oneActionPerformed
        ans.setForeground(Color.white);
        String z="0";
        if (z.equals(que.getText()))
        {
        que.setText("");
        }
        String n=ans.getText()+one.getText();
        String n2=que.getText()+one.getText();
        ans.setText(n);
         que.setText(n2);
        // TODO add your handling code here:
    }//GEN-LAST:event_oneActionPerformed

    private void twoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_twoActionPerformed
        // TODO add your handling code here:
        ans.setForeground(Color.white);
        String z="0";
        if (z.equals(que.getText()))
        {
        que.setText("");
        }
        String n=ans.getText()+two.getText();
        String n2=que.getText()+two.getText();
        ans.setText(n);
         que.setText(n2);
    }//GEN-LAST:event_twoActionPerformed

    private void zeroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_zeroActionPerformed
    ans.setForeground(Color.white);
        String z="0";
        if (z.equals(que.getText()))
        {
        que.setText("");
        }
        String n=ans.getText()+zero.getText();
        String n2=que.getText()+zero.getText();
        ans.setText(n);
         que.setText(n2);        // TODO add your handling code here:
    }//GEN-LAST:event_zeroActionPerformed

    private void threeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_threeActionPerformed
        // TODO add your handling code here:
         ans.setForeground(Color.white);
        String z="0";
        if (z.equals(que.getText()))
        {
        que.setText("");
        }
        String n=ans.getText()+three.getText();
        String n2=que.getText()+three.getText();
        ans.setText(n);
         que.setText(n2);     
    }//GEN-LAST:event_threeActionPerformed

    private void sixActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sixActionPerformed
        // TODO add your handling code here:
         ans.setForeground(Color.white);
        String z="0";
        if (z.equals(que.getText()))
        {
        que.setText("");
        }
        String n=ans.getText()+six.getText();
        String n2=que.getText()+six.getText();
        ans.setText(n);
         que.setText(n2);   
    }//GEN-LAST:event_sixActionPerformed

    private void fiveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fiveActionPerformed
     ans.setForeground(Color.white);
        String z="0";
        if (z.equals(que.getText()))
        {
        que.setText("");
        }
        String n=ans.getText()+five.getText();
        String n2=que.getText()+five.getText();
        ans.setText(n);
         que.setText(n2);           // TODO add your handling code here:
    }//GEN-LAST:event_fiveActionPerformed

    private void fourActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fourActionPerformed
       ans.setForeground(Color.white);
        String z="0";
        if (z.equals(que.getText()))
        {
        que.setText("");
        }
        String n=ans.getText()+four.getText();
        String n2=que.getText()+four.getText();
        ans.setText(n);
         que.setText(n2);        
        // TODO add your handling code here:
    }//GEN-LAST:event_fourActionPerformed

    private void nineActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nineActionPerformed
        ans.setForeground(Color.white);
        String z="0";
        if (z.equals(que.getText()))
        {
        que.setText("");
        }
        String n=ans.getText()+nine.getText();
        String n2=que.getText()+nine.getText();
        ans.setText(n);
         que.setText(n2);        
        // TODO add your handling code here:
    }//GEN-LAST:event_nineActionPerformed

    private void eightActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_eightActionPerformed
        ans.setForeground(Color.white);
        String z="0";
        if (z.equals(que.getText()))
        {
        que.setText("");
        }
        String n=ans.getText()+eight.getText();
        String n2=que.getText()+eight.getText();
        ans.setText(n);
         que.setText(n2);        
        // TODO add your handling code here:
    }//GEN-LAST:event_eightActionPerformed

    private void sevenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sevenActionPerformed
        ans.setForeground(Color.white);
        String z="0";
        if (z.equals(que.getText()))
        {
        que.setText("");
        }
        String n=ans.getText()+seven.getText();
        String n2=que.getText()+seven.getText();
        ans.setText(n);
         que.setText(n2);        
        // TODO add your handling code here:
    }//GEN-LAST:event_sevenActionPerformed

    private void clrActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clrActionPerformed
         que.setText("0");
        ans.setText("");
        ans.removeAll();
// TODO add your handling code here:
    }//GEN-LAST:event_clrActionPerformed

    private void plusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_plusActionPerformed
       ans.setForeground(Color.white);
        f = Double.parseDouble(ans.getText());
      ans.setText("");
     op="+";
     String n=que.getText()+plus.getText();
     que.setText(n);
        // TODO add your handling code here:
    }//GEN-LAST:event_plusActionPerformed

    private void equlActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_equlActionPerformed
        ans.setForeground(Color.black);
        String answer;
        sec=Double.parseDouble(String.valueOf(ans.getText()));
        if (op=="+")
        {
       // res=f+sec;
        res=Func.add(f,sec);
        answer=String.format("%.0f",res);
        ans.setText(String.valueOf(res));
        }
        
        if (op=="-")
        {
       // res=f+sec;
            res=Func.sub(f,sec);
        answer=String.format("%.0f",res);
        ans.setText(String.valueOf(res));
        }
        
        if (op=="/")
        {
       // res=f+sec;
            res=Func.divs(f,sec);
        answer=String.format("%.0f",res);
        ans.setText(String.valueOf(res));
        }
        
        if (op=="X")
        {
       // res=f+sec;
            res=Func.multiply(f,sec);
        answer=String.format("%.0f",res);
        ans.setText(String.valueOf(res));
        }
        
        if (op=="%")
        {
       // res=f+sec;
            res=Func.perc(f,sec);
        answer=String.format("%.0f",res);
        ans.setText(String.valueOf(res));
        }
        
        if (op=="Sin")
        {
       // res=f+sec;
            res=Func.sinvalue(sec);
        answer=String.format("%.0f",res);
        ans.setText(String.valueOf(res));
        }
         
        if (op=="Cos")
        {
       // res=f+sec;
            res=Func.cosvalue(sec);
        answer=String.format("%.0f",res);
        ans.setText(String.valueOf(res));
        }
        
        if (op=="Tan")
        {
       // res=f+sec;
            res=Func.tanvalue(sec);
        answer=String.format("%.0f",res);
        ans.setText(String.valueOf(res));
        }
        
        if (op=="Log")
        {
       // res=f+sec;
            res=Func.logarithm(sec);
        answer=String.format("%.0f",res);
        ans.setText(String.valueOf(res));
        }
        
        if (op=="^")
        {
       // res=f+sec;
            res=Func.raised(f,sec);
        answer=String.format("%.0f",res);
        ans.setText(String.valueOf(res));
        }
       if (op=="^2")
        {
       // res=f+sec;
        res=Func.raised2(f);
        answer=String.format("%.0f",res);
        ans.setText(String.valueOf(res));
        }
        
       if (op=="^3")
        {
       // res=f+sec;
            res=Func.raised3(f);
        answer=String.format("%.0f",res);
        ans.setText(String.valueOf(res));
        }
       
       if (op=="10^")
        {
       // res=f+sec;
        res=Func.raised10(sec);
        answer=String.format("%.0f",res);
        ans.setText(String.valueOf(res));
        }
       
       if (op=="Mod")
        {
       // res=f+sec;
            res=Func.modulus(f,sec);
        answer=String.format("%.0f",res);
        ans.setText(String.valueOf(res));
        }
       
       if (op=="√")
        {
       // res=f+sec;
            res=Func.squaroot(sec);
        answer=String.format("%.0f",res);
        ans.setText(String.valueOf(res));
        }
       
        if (op=="3√")
        {
       // res=f+sec;
            res=Func.cuberoot(sec);
        answer=String.format("%.0f",res);
        ans.setText(String.valueOf(res));
        }
        
         if (op=="Bin")
        {
       // res=f+sec;
          int a=Integer.parseInt(ans.getText());
          //que.setText(Integer.toString(a,2));
          ans.setText(Integer.toString(a,2));
       
        }
         if (op=="Hex")
        {
       // res=f+sec;
          int a=Integer.parseInt(ans.getText());
         // que.setText(Integer.toString(a,16));
          ans.setText(Integer.toString(a,16));
       
        }
         
         if (op=="Oct")
        {
       // res=f+sec;
          int a=Integer.parseInt(ans.getText());
         // que.setText(Integer.toString(a,8));
          ans.setText(Integer.toString(a,8));
        }
         
         if (op=="Dec")
        {
       // res=f+sec;
          int a=Integer.parseInt(ans.getText());
          //que.setText(Integer.toString(a,10));
          ans.setText(Integer.toString(a,10));
       
        }
    //add your handling code here:
    }//GEN-LAST:event_equlActionPerformed

    private void minusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_minusActionPerformed
        // TODO add your handling code here:
        
        ans.setForeground(Color.white);
        f = Double.parseDouble(ans.getText());
      ans.setText("");
     op="-";
     String n=que.getText()+minus.getText();
     que.setText(n);
    }//GEN-LAST:event_minusActionPerformed

    private void perActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_perActionPerformed
ans.setForeground(Color.white);
        f = Double.parseDouble(ans.getText());
      ans.setText("");
     op="%";
     String n=que.getText()+per.getText();
     que.setText(n);        // TODO add your handling code here:
    }//GEN-LAST:event_perActionPerformed

    private void backActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backActionPerformed
        String bsp=null;
        if(que.getText().length()>0)
        {
        StringBuilder sbd=new StringBuilder(que.getText());
        sbd.deleteCharAt(que.getText().length()-1);
       bsp=sbd.toString();
       que.setText(bsp);
       ans.setText(bsp);
        }
// TODO add your handling code here:
    }//GEN-LAST:event_backActionPerformed

    private void multActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_multActionPerformed
        // TODO 
        ans.setForeground(Color.white);
        f = Double.parseDouble(ans.getText());
      ans.setText("");
     op="X";
     String n=que.getText()+mult.getText();
     que.setText(n);
//dd your handling code here:
    }//GEN-LAST:event_multActionPerformed

    private void dotActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dotActionPerformed
         if(!ans.getText().contains("."))
         {
             que.setText(que.getText()+dot.getText());
             ans.setText(ans.getText()+dot.getText());
         }
        // TODO add your handling code here:
    }//GEN-LAST:event_dotActionPerformed

    private void signActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_signActionPerformed
        double si=Double.parseDouble(String.valueOf(ans.getText()));
                si=si*(-1);
               ans.setText(String.valueOf(si));
               que.setText(String.valueOf(si));
// TODO add your handling code here:
    }//GEN-LAST:event_signActionPerformed

    private void queActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_queActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_queActionPerformed

    private void rais3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rais3ActionPerformed
     ans.setForeground(Color.white);
        f = Double.parseDouble(ans.getText());
      ans.setText("");
     op="^3";
     String n=que.getText()+rais3.getText();
     que.setText(n);
        // TODO add your handling code here:
    }//GEN-LAST:event_rais3ActionPerformed

    private void raisabActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_raisabActionPerformed
     ans.setForeground(Color.white);
       // f= Double.parseDouble(ans.getText());
     String z="0";
        if (z.equals(que.getText()))
        {
        que.setText("");
        }
     
     ans.setText("");
     op="^";
     String n=que.getText()+raisab.getText();
     que.setText(n);
        // TODO add your handling code here:
    }//GEN-LAST:event_raisabActionPerformed

    private void modlsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_modlsActionPerformed
    
         ans.setForeground(Color.white);
        f = Double.parseDouble(ans.getText());
      ans.setText("");
     op="Mod";
     String n=que.getText()+modls.getText();
     que.setText(n);
        // TODO add your handling code here:
    }//GEN-LAST:event_modlsActionPerformed

    private void binryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_binryActionPerformed

         ans.setForeground(Color.white);
       
         //f = Double.parseDouble(ans.getText());
      String z="0";
        if (z.equals(que.getText()))
        {
        que.setText("");
        }
     op="Bin";
     String n=que.getText()+binry.getText();
     que.setText(n);
        // TODO add your handling code here:
    }//GEN-LAST:event_binryActionPerformed

    private void hexdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hexdActionPerformed
         ans.setForeground(Color.white);
     //   f = Double.parseDouble(ans.getText());
      String z="0";
        if (z.equals(que.getText()))
        {
        que.setText("");
        }
     op="Hex";
     String n=que.getText()+hexd.getText();
     que.setText(n);
// TODO add your handling code here:
    }//GEN-LAST:event_hexdActionPerformed

    private void deciActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deciActionPerformed

         ans.setForeground(Color.white);
        //f = Double.parseDouble(ans.getText());
      String z="0";
        if (z.equals(que.getText()))
        {
        que.setText("");
        }
     op="Dec";
     String n=que.getText()+deci.getText();
     que.setText(n);// TODO add your handling code here:
    }//GEN-LAST:event_deciActionPerformed

    private void sineActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sineActionPerformed
  ans.setForeground(Color.white);
        //f = Double.parseDouble(ans.getText());
      String z="0";
        if (z.equals(que.getText()))
        {
        que.setText("");
        }
     op="Sin";
     String n=que.getText()+sine.getText();
     que.setText(n);
        // TODO add your handling code here:
    }//GEN-LAST:event_sineActionPerformed

    private void CosineActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CosineActionPerformed
       
ans.setForeground(Color.white);
        //f = Double.parseDouble(ans.getText());
      String z="0";
        if (z.equals(que.getText()))
        {
        que.setText("");
        }
     op="Cos";
     String n=que.getText()+Cosine.getText();
     que.setText(n);        
// TODO add your handling code here:
    }//GEN-LAST:event_CosineActionPerformed

    private void TaneActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TaneActionPerformed
ans.setForeground(Color.white);
        //f = Double.parseDouble(ans.getText());
      String z="0";
        if (z.equals(que.getText()))
        {
        que.setText("");
        }
     op="Tan";
     String n=que.getText()+Tane.getText();
     que.setText(n);       
        
// TODO add your handling code here:
    }//GEN-LAST:event_TaneActionPerformed

    private void logsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_logsActionPerformed
      ans.setForeground(Color.white);
        //f = Double.parseDouble(ans.getText());
      String z="0";
        if (z.equals(que.getText()))
        {
        que.setText("");
        }
     op="Log";
     String n=que.getText()+logs.getText();
     que.setText(n);
        // TODO add your handling code here:
    }//GEN-LAST:event_logsActionPerformed

    private void powersActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_powersActionPerformed
    ans.setForeground(Color.white);
        f = Double.parseDouble(ans.getText());
      ans.setText("");
     op="^";
     String n=que.getText()+powers.getText();
     que.setText(n);
            // TODO add your handling code here:
    }//GEN-LAST:event_powersActionPerformed

    private void rais2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rais2ActionPerformed
 ans.setForeground(Color.white);
        f = Double.parseDouble(ans.getText());
      ans.setText("");
     op="^2";
     String n=que.getText()+rais2.getText();
     que.setText(n);
            // TODO add your handling code here:
    }//GEN-LAST:event_rais2ActionPerformed

    private void octalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_octalActionPerformed
 ans.setForeground(Color.white);
        f = Double.parseDouble(ans.getText());
      ans.setText("");
     op="Oct";
     String n=que.getText()+octal.getText();
     que.setText(n);
            // TODO add your handling code here:
    }//GEN-LAST:event_octalActionPerformed

    private void squr2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_squr2ActionPerformed

             ans.setForeground(Color.white);
      // f= Double.parseDouble(ans.getText());
     String z="0";
        if (z.equals(que.getText()))
        {
        que.setText("");
        }
     
     ans.setText("");
     op="√";
     String n=que.getText()+squr2.getText();
     que.setText(n);
// TODO add your handling code here:
    }//GEN-LAST:event_squr2ActionPerformed

    private void squr3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_squr3ActionPerformed
        ans.setForeground(Color.white);
        //f = Double.parseDouble(ans.getText());
      String z="0";
        if (z.equals(que.getText()))
        {
        que.setText("");
        }
     op="3√";
     String n=que.getText()+squr3.getText();
     que.setText(n);
        // TODO add your handling code here:
    }//GEN-LAST:event_squr3ActionPerformed

    private void defActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_defActionPerformed
        this.setResizable(true);
        this.setSize(440,660);
        // TODO add your handling code here:
    }//GEN-LAST:event_defActionPerformed

    private void scientificActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_scientificActionPerformed
        this.setResizable(true);
        this.setSize(750,660);
        // TODO add your handling code here:
    }//GEN-LAST:event_scientificActionPerformed

    private void hstActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hstActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_hstActionPerformed

    private void formWindowActivated(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowActivated
       this.setResizable(true);
        this.setSize(440,660);
        
// TODO add your handling code here:
    }//GEN-LAST:event_formWindowActivated

        
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Calculator.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Calculator.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Calculator.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Calculator.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Calculator().setVisible(true);
//                new Calculator().setResizable(true);
//                new Calculator().setSize(440,650);
               // new Calculator().setSize(450,650);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Cosine;
    private javax.swing.JButton Tane;
    private javax.swing.JTextField ans;
    private javax.swing.JButton back;
    private javax.swing.JButton binry;
    private javax.swing.JButton clr;
    private javax.swing.JButton deci;
    private javax.swing.JMenuItem def;
    private javax.swing.JButton div;
    private javax.swing.JButton dot;
    private javax.swing.JButton eight;
    private javax.swing.JButton equl;
    private javax.swing.JButton five;
    private javax.swing.JButton four;
    private javax.swing.JButton hexd;
    private javax.swing.JMenuItem hst;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JSplitPane jSplitPane1;
    private javax.swing.JButton logs;
    private javax.swing.JButton minus;
    private javax.swing.JButton modls;
    private javax.swing.JButton mult;
    private javax.swing.JButton nine;
    private javax.swing.JButton octal;
    private javax.swing.JButton one;
    private javax.swing.JButton per;
    private javax.swing.JButton plus;
    private javax.swing.JButton powers;
    private javax.swing.JTextField que;
    private javax.swing.JButton rais2;
    private javax.swing.JButton rais3;
    private javax.swing.JButton raisab;
    private javax.swing.JMenuItem scientific;
    private javax.swing.JButton seven;
    private javax.swing.JButton sign;
    private javax.swing.JButton sine;
    private javax.swing.JButton six;
    private javax.swing.JButton squr2;
    private javax.swing.JButton squr3;
    private javax.swing.JButton three;
    private javax.swing.JButton two;
    private javax.swing.JButton zero;
    // End of variables declaration//GEN-END:variables
}
